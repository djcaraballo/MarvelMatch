// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LandingPage Component should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LandingPage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="logo-container"
        >
          <h1
            className="marvel"
          >
            MARVEL
          </h1>
          <h2
            className="match"
          >
            MATCH
          </h2>
        </div>,
        <img
          className="gif"
          src="../../assets/comic-flip.gif"
        />,
        <div
          className="links-container"
        >
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="landing-nav"
            to="/UserLoginForm"
          >
            <h3>
              login
            </h3>
          </NavLink>
          <p>
            <span
              className="line-span"
            />
            OR
            <span
              className="line-span"
            />
          </p>
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="landing-nav"
            to="/NewHeroSignupForm"
          >
            <h3>
              signup
            </h3>
          </NavLink>
        </div>,
      ],
      "className": "wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="marvel"
            >
              MARVEL
            </h1>,
            <h2
              className="match"
            >
              MATCH
            </h2>,
          ],
          "className": "logo-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "MARVEL",
              "className": "marvel",
            },
            "ref": null,
            "rendered": "MARVEL",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "MATCH",
              "className": "match",
            },
            "ref": null,
            "rendered": "MATCH",
            "type": "h2",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "gif",
          "src": "../../assets/comic-flip.gif",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="landing-nav"
              to="/UserLoginForm"
            >
              <h3>
                login
              </h3>
            </NavLink>,
            <p>
              <span
                className="line-span"
              />
              OR
              <span
                className="line-span"
              />
            </p>,
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="landing-nav"
              to="/NewHeroSignupForm"
            >
              <h3>
                signup
              </h3>
            </NavLink>,
          ],
          "className": "links-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": <h3>
                login
              </h3>,
              "className": "landing-nav",
              "to": "/UserLoginForm",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "login",
              },
              "ref": null,
              "rendered": "login",
              "type": "h3",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="line-span"
                />,
                "OR",
                <span
                  className="line-span"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "line-span",
                },
                "ref": null,
                "rendered": null,
                "type": "span",
              },
              "OR",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "line-span",
                },
                "ref": null,
                "rendered": null,
                "type": "span",
              },
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": <h3>
                signup
              </h3>,
              "className": "landing-nav",
              "to": "/NewHeroSignupForm",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "signup",
              },
              "ref": null,
              "rendered": "signup",
              "type": "h3",
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="logo-container"
          >
            <h1
              className="marvel"
            >
              MARVEL
            </h1>
            <h2
              className="match"
            >
              MATCH
            </h2>
          </div>,
          <img
            className="gif"
            src="../../assets/comic-flip.gif"
          />,
          <div
            className="links-container"
          >
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="landing-nav"
              to="/UserLoginForm"
            >
              <h3>
                login
              </h3>
            </NavLink>
            <p>
              <span
                className="line-span"
              />
              OR
              <span
                className="line-span"
              />
            </p>
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="landing-nav"
              to="/NewHeroSignupForm"
            >
              <h3>
                signup
              </h3>
            </NavLink>
          </div>,
        ],
        "className": "wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="marvel"
              >
                MARVEL
              </h1>,
              <h2
                className="match"
              >
                MATCH
              </h2>,
            ],
            "className": "logo-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "MARVEL",
                "className": "marvel",
              },
              "ref": null,
              "rendered": "MARVEL",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "MATCH",
                "className": "match",
              },
              "ref": null,
              "rendered": "MATCH",
              "type": "h2",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "gif",
            "src": "../../assets/comic-flip.gif",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="landing-nav"
                to="/UserLoginForm"
              >
                <h3>
                  login
                </h3>
              </NavLink>,
              <p>
                <span
                  className="line-span"
                />
                OR
                <span
                  className="line-span"
                />
              </p>,
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="landing-nav"
                to="/NewHeroSignupForm"
              >
                <h3>
                  signup
                </h3>
              </NavLink>,
            ],
            "className": "links-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": <h3>
                  login
                </h3>,
                "className": "landing-nav",
                "to": "/UserLoginForm",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "login",
                },
                "ref": null,
                "rendered": "login",
                "type": "h3",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="line-span"
                  />,
                  "OR",
                  <span
                    className="line-span"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "line-span",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
                "OR",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "line-span",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "span",
                },
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": <h3>
                  signup
                </h3>,
                "className": "landing-nav",
                "to": "/NewHeroSignupForm",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "signup",
                },
                "ref": null,
                "rendered": "signup",
                "type": "h3",
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
