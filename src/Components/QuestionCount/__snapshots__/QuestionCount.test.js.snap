// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`QuestionCount Component should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <QuestionCount
    counter={0}
    total={11}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <h6>
        Question 
        <span>
          0
        </span>
         of 
        <span>
          11
        </span>
      </h6>,
      "className": "question-count",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "Question ",
          <span>
            0
          </span>,
          " of ",
          <span>
            11
          </span>,
        ],
      },
      "ref": null,
      "rendered": Array [
        "Question ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 0,
          },
          "ref": null,
          "rendered": 0,
          "type": "span",
        },
        " of ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": 11,
          },
          "ref": null,
          "rendered": 11,
          "type": "span",
        },
      ],
      "type": "h6",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <h6>
          Question 
          <span>
            0
          </span>
           of 
          <span>
            11
          </span>
        </h6>,
        "className": "question-count",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Question ",
            <span>
              0
            </span>,
            " of ",
            <span>
              11
            </span>,
          ],
        },
        "ref": null,
        "rendered": Array [
          "Question ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": 0,
            },
            "ref": null,
            "rendered": 0,
            "type": "span",
          },
          " of ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": 11,
            },
            "ref": null,
            "rendered": 11,
            "type": "span",
          },
        ],
        "type": "h6",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
